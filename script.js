
/**
 * Fucntion that creates a single task item
 * @param {Object} task An object that takes three properties
 * @param {string} task.id - Generated by firebase - Not needed.
 * @param {string} task.description - Description of a task.
 * @param {boolean} task.done - Bool that determines wether the task has been completed.
 */
const createTaskItem = (task) => {
    const div = document.createElement('div');
    div.classList.add('task-item');

    const checkbox = document.createElement('input');
    checkbox.type = "checkbox";
    if(task.done) {
        checkbox.checked = true;
    }
    div.appendChild(checkbox);

    const p = document.createElement('p');
    const taskdescription = document.createTextNode(task.description);
    p.appendChild(taskdescription);
    div.appendChild(p);

    const deleteButton = document.createElement('button');
    deleteButton.classList.add('delete-button');
    div.appendChild(deleteButton);
    return div;
}

const taskContainer = document.querySelector('main');
/**
 * Function that adds all tasks that where recieved from the database into the dom by using the createTaskItem function
 */
const addTasksToDom = async () => {
    const tasks = await convertResponse();
    const taskItems = tasks.map(item => {
        console.log('Item',item);
        const taskItem = createTaskItem(item);
        return taskItem;
    });
    taskItems.forEach(item => {
        console.log(item);
        
        taskContainer.appendChild(item);
    });
}

/**
 * Function that converts the object with hashes into an array with tasks.
 */
const convertResponse = async () => {
    const result = await getAllTasks();
    let tasks = Object.keys(result).map(key => ({
        id: key,
        description: result[key].description,
        done: result[key].done
    }));
    console.log("After the tasks array", tasks);
    return tasks;
}

addTasksToDom();